name,ring,quadrant,isNew,description
docker,adopt,tools,TRUE,"<p><strong><a href=""https://www.docker.com/"">Docker</a></strong>, Docker provides a way to run applications securely isolated in a container, packaged with all its dependencies and libraries.</p>"
jenkins,adopt,tools,TRUE,"<p><strong><a href=""https://jenkins.io/"">Jenkins</a></strong>,Jenkins is a self-contained, open source automation server which can be used to automate all sorts of tasks related to building, testing, and delivering or deploying software.</p><p>Jenkins can be installed through native system packages, Docker, or even run standalone by any machine with a Java Runtime Environment (JRE) installed.</p>"
TypeScript,adopt,language-and-frameworks,TRUE,"<p><strong><a href=""https://www.typescriptlang.org/"">TypeScript</a></strong>, a statically typed language and superset of JavaScript, has become our sensible default. Large-scale projects benefit most from the type safety. Our developers favor its minimal configuration management, well-integrated IDE support and its ability to refactor code safely and gradually adopt types. With its <a href=""https://definitelytyped.org/"">good repository</a> of TypeScript-type definitions at hand, we benefit from all the rich JavaScript libraries while gaining type safety.</p>"
Vue,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this language should be assessed</i></p>"
React,adopt,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this language should be adopted</i></p>"
Angular,adopt,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this language should be adopted</i></p>"
Contentful,adopt,platforms,TRUE,"<p>Headless content management systems (CMSes) are becoming a common component of digital platforms. <a href=""http://www.contentful.com/""><strong>Contentful</strong></a> is a modern headless CMS that our teams have successfully integrated into their development workflows. We particularly like its API-first approach and implementation of <a href=""http://www.contentful.com/r/knowledgebase/cms-as-code/"">CMS as code</a>. It supports powerful content modeling primitives as code and content model evolution scripts, which allow it to be treated like other data store schemas and enable <a href=""http://martinfowler.com/articles/evodb.html"">evolutionary database design</a> practices to be applied to CMS development. Its robustness and a stream of new features, including a sandbox environment, have impressed our teams further and made Contentful our default choice in this space.</p>"
Clean Code,adopt,techniques,TRUE,"<p><strong><a href=""https://gist.github.com/wojteklu/73c6914cc446146b8b533c0988cf8d29"">Clean Code</a></strong>, Code is clean if it can be understood easily, by everyone on the team. Clean code can be read and enhanced by a developer other than its original author. With understandability comes readability, changeability, extensibility and maintainability.</p>"
Micro frontends,assess,techniques,TRUE,"<p>We've seen significant benefits from introducing <a href=""https://martinfowler.com/articles/microservices.html"">microservices</a>, which have allowed teams to scale the delivery of independently deployed and maintained services. Unfortunately, we've also seen many teams create a frontend monolith — a large, entangled browser application that sits on top of the backend services — largely neutralizing the benefits of microservices. Since we first described <strong>micro frontends</strong> as a technique to address this issue, we've had almost universally positive experiences with the approach and have found a number of patterns to use micro frontends even as more and more code shifts from the server to the web browser. So far, <a href=""/radar/platforms/web-components-standard"">web components</a> have been elusive in this field, though.</p>"
Functional Programming,trial,techniques,TRUE,"<p><strong><a href=""https://medium.com/javascript-scene/master-the-javascript-interview-what-is-functional-programming-7f218c68b3a0"">Functional programming (often abbreviated FP)</a></strong> is the process of building software by composing pure functions, avoiding shared state, mutable data, and side-effects. Functional programming is declarative rather than imperative, and application state flows through pure functions. Contrast with object oriented programming, where application state is usually shared and colocated with methods in objects.</p>"
artifactory,assess,tools,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Python,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Go,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this language should be assessed</i></p>"
AWS,adopt,platforms,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
MongoDB,assess,tools,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Node.js,adopt,platforms,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Ionic,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Stencil,assess,language-and-frameworks,TRUE,"Stencil is a web Component compiler for building fast, reusable UI components and Progressive Web Apps"
Web Components,trial,techniques,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Bit,assess,tools,TRUE,"Bit is a platform and open-source tool built to help build modular apps through the development and composition of components."
Redux,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
MobX,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
RxJS,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
ES Modules,trial,techniques,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
GraphQL,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Apollo,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Gatsby,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Cypress,assess,tools,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Svelte,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Rust,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Tailwindcss,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
PWA,trial,techniques,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Reason,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Flow,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
TypeScript,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Webassembly,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Relay,assess,language-and-frameworks,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Storybook,assess,tools,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Webpack,adopt,tools,TRUE,"<p><i>Please add a short meaningful description and a reasoning why this tool should be assessed</i></p>"
Mobile-First Animations,assess,techniques,TRUE,"<p>A <strong><a href=""https://mobile-first-animation.netlify.com/"">Mobile-First Animation</a></strong>, takes inspiration from design patterns found in native apps, especially thoughtful use of gestures Is developed on a mobile device, and intentionally designed to work within the context of a mobile browser rather than a desktop one and Has great performance, even on mid-range devices</p>"
Pulimi,assess,platforms,TRUE,"<p>Modern Infrastructure as Code. Create, deploy, and manage multi-cloud software, using familiar languages and tools you already know. Pulumi enables developers to write code in their favorite language, such as TypeScript, JavaScript, Python, and Go. This enables modern approaches to cloud applications and infrastructure without needing to learn yet-another YAML or DSL dialect. This unlocks abstractions and reuse as well as access to your favorite IDEs, refactoring, and testing tools. Master one toolchain and set of frameworks, and go to any cloud — AWS, Azure, GCP, or Kubernetes — with ease.</p>"
Istio,assess,platforms,TRUE,"<p>Istio is an open source service mesh and it can be used on existing kubernetes clusters without having to make code changes. Core concepts supported by Istio are around Traffic management, Security and Observability — these, in turn, translate into features like load balancing, service to service as well as end-user authentication and metrics/monitoring.</p>"
Knative,assess,,TRUE,"<p>Knative is originally developed by Google with the collaboration of many companies including Pivotal. It is more focused on application architecting (functions and events) and release management(build and serve/deploy) abstractions rather than the operational aspects of routing, security, metrics ..etc. Knative’s focus is on treating application deployment as a serverless model. At a high level it looks at application architecting process as three distinct pieces — Building, Serving and Events. Knative is built on top of kubernetes and these pieces are deployed on kubernetes as custom resource definitions (CRDs).</p>"
Helm,assess,tool,TRUE,"<p>Helm is a package manager for kubernetes, conceptually similar to npm for node or pip for python. At a high level, Helm can fetch software from repositories, install/upgrade/configure software and dependencies.</p>"